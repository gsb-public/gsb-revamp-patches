diff --git a/mappers/file.inc b/mappers/file.inc
index 2cc5dc3..1c173f3 100644
--- a/mappers/file.inc
+++ b/mappers/file.inc
@@ -13,17 +13,33 @@
 /**
  * Implements hook_feeds_processor_targets_alter().
  *
- * @see FeedsNodeProcessor::getMappingTargets().
+ * @see FeedsNodeProcessor::getMappingTargets()
  */
 function file_feeds_processor_targets_alter(&$targets, $entity_type, $bundle_name) {
   foreach (field_info_instances($entity_type, $bundle_name) as $name => $instance) {
     $info = field_info_field($name);
 
     if (in_array($info['type'], array('file', 'image'))) {
-      $targets[$name] = array(
-        'name' => check_plain($instance['label']),
+      $targets[$name . ':uri'] = array(
+        'name' => t('@label: URI', array('@label' => $instance['label'])),
         'callback' => 'file_feeds_set_target',
-        'description' => t('The @label field of the node.', array('@label' => $instance['label'])),
+        'description' => t('The URI of the @label field.', array('@label' => $instance['label'])),
+        'real_target' => $name,
+      );
+    }
+
+    if ($info['type'] == 'image') {
+      $targets[$name . ':alt'] = array(
+        'name' => t('@label: Alt', array('@label' => $instance['label'])),
+        'callback' => 'file_feeds_set_target',
+        'description' => t('The alt tag of the @label field.', array('@label' => $instance['label'])),
+        'real_target' => $name,
+      );
+      $targets[$name . ':title'] = array(
+        'name' => t('@label: Title', array('@label' => $instance['label'])),
+        'callback' => 'file_feeds_set_target',
+        'description' => t('The title of the @label field.', array('@label' => $instance['label'])),
+        'real_target' => $name,
       );
     }
   }
@@ -60,11 +76,13 @@ function file_feeds_set_target($source, $entity, $target, $value) {
     return;
   }
 
+
+  list($field_name, $sub_field) = explode(':', $target, 2);
+  $instance_info = field_info_instance($entity->feeds_item->entity_type, $field_name, $entity->type);
+  $info = field_info_field($field_name);
+
   // Determine file destination.
   // @todo This needs review and debugging.
-  list($entity_id, $vid, $bundle_name) = entity_extract_ids($entity->feeds_item->entity_type, $entity);
-  $instance_info = field_info_instance($entity->feeds_item->entity_type, $target, $bundle_name);
-  $info = field_info_field($target);
   $data = array();
   if (!empty($entity->uid)) {
     $data[$entity->feeds_item->entity_type] = $entity;
@@ -72,23 +90,35 @@ function file_feeds_set_target($source, $entity, $target, $value) {
   $destination = file_field_widget_uri($info, $instance_info, $data);
 
   // Populate entity.
-  $i = 0;
-  $field = isset($entity->$target) ? $entity->$target : array();
+  $delta = 0;
+  $field = isset($entity->$field_name) ? $entity->$field_name : array();
   foreach ($value as $v) {
-    try {
-      $file = $v->getFile($destination);
-    }
-    catch (Exception $e) {
-      watchdog_exception('Feeds', $e, nl2br(check_plain($e)));
+    if ($info['cardinality'] == $delta) {
+      break;
     }
-    if ($file) {
-      $field['und'][$i] = (array)$file;
-      $field['und'][$i]['display'] = 1; // @todo: Figure out how to properly populate this field.
-      if ($info['cardinality'] == 1) {
+
+    // Init file array.
+    $field[LANGUAGE_NONE][$delta] = isset($field[LANGUAGE_NONE][$delta]) ? $field[LANGUAGE_NONE][$delta] : array();
+    switch ($sub_field) {
+      case 'alt':
+      case 'title':
+        $field[LANGUAGE_NONE][$delta][$sub_field] = $v->getValue();
+        break;
+
+      case 'uri':
+        try {
+          $file = $v->getFile($destination);
+        }
+        catch (Exception $e) {
+          watchdog_exception('Feeds', $e, nl2br(check_plain($e)));
+          return;
+        }
+        $field[LANGUAGE_NONE][$delta] += (array) $file;
+        // @todo: Figure out how to properly populate this field.
+        $field[LANGUAGE_NONE][$delta]['display'] = 1;
         break;
-      }
-      $i++;
     }
+    $delta++;
   }
-  $entity->{$target} = $field;
+  $entity->$field_name = $field;
 }
